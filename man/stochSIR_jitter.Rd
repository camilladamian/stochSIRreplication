% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recursion.R
\name{stochSIR_jitter}
\alias{stochSIR_jitter}
\title{Jitter parameter particles}
\usage{
stochSIR_jitter(
  n_params,
  param_particles,
  jitter_settings = stochSIR_jitter_settings
)
}
\arguments{
\item{n_params}{Number of parameter particles to jitter, a positive scalar.}

\item{param_particles}{Parameter particles to jitter, a data frame
with columns \code{k}, \code{s} and \code{m}.}

\item{jitter_settings}{Necessary arguments to further specify the chosen
jittering kernel, a (nested) list. The top-level names must be \code{k_settings},
\code{s_settings} and \code{m_settings}. In the paper, the jittering kernel is
chosen to be a truncated Gaussian one and this function calls
\code{truncnorm::rtruncnorm}, so each top-level element must be a list containing
\code{a}, \code{b} and \code{max}. Defaults to \code{stochSIR_jitter_settings},
which is available to users upon package loading.}
}
\value{
A data frame with \code{n_params} rows and columns \code{k}, \code{s}
and \code{m} (corresponding to \eqn{\kappa, \sigma} and \eqn{\mu}, respectively).
}
\description{
This function 'jitters' \emph{all} parameter particles \eqn{\theta = (\kappa, \sigma, \mu)}
using a truncated Gaussian kernel with mean corresponding to the currently
available parameter particles and fixed variance (see Crisan and MÃ­guez (2018)
for more details about the possible choices of jittering kernels).
}
